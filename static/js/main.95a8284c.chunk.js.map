{"version":3,"sources":["components/Searchbar.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Button.js","components/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","target","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","onChange","name","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","webformatURL","tags","largeImageURL","onOpen","onGetImg","onClick","src","alt","showModal","ImageGallery","images","console","log","map","id","Button","modalRoot","document","querySelector","Modal","onCloseByClick","nodeName","onClose","onCloseByKedown","code","window","addEventListener","removeEventListener","createPortal","img","App","mainURL","secondaryURL","myKey","page","status","modalImage","searchQuery","loadMore","prev","fetch","then","response","ok","json","Promise","reject","Error","prevState","hits","toggleModal","setImgModal","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","setTimeout","autoClose","color","height","width","timeout","style","margin","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.95a8284c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        query:'',\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({query: e.target.value.toLowerCase()})        \r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.query.trim() === '') {\r\n            return toast.error(\"Enter search query!\")\r\n           \r\n        }\r\n        this.props.onSubmit(this.state.query)\r\n        this.setState({ query: '' });\r\n    }\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form onSubmit={this.handleSubmit}className=\"SearchForm\">\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.query}\r\n                        name='query'\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\nexport default Searchbar","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ImageGalleryItem extends Component{\r\n    render() {\r\n        const {webformatURL, tags, largeImageURL, onOpen, onGetImg} = this.props\r\n        return (\r\n            <li className=\"ImageGalleryItem\"\r\n                onClick={() => onGetImg(largeImageURL, tags)}\r\n            >\r\n                <img\r\n                    src={webformatURL}\r\n                    alt={tags}\r\n                    className=\"ImageGalleryItem-image\"\r\n                    showModal={onOpen}\r\n                />\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  onGetImg: PropTypes.func.isRequired,\r\n  onOpen: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n};\r\nexport default ImageGalleryItem\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ImageGallery extends Component {\r\n  render() {\r\n    const { images, showModal, onGetImg } = this.props\r\n    console.log({onGetImg});\r\n    return (\r\n      \r\n      <ul className=\"ImageGallery\">\r\n        {\r\n         images.map(({id, webformatURL, tags, largeImageURL}) => \r\n           <ImageGalleryItem\r\n             key={id}\r\n             webformatURL={webformatURL}\r\n             tags={tags}\r\n             largeImageURL={largeImageURL}\r\n             onOpen={showModal}\r\n             onGetImg={onGetImg}\r\n\r\n           />\r\n           \r\n          )}\r\n      </ul>\r\n    )\r\n  }\r\n  \r\n  \r\n} \r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  showModal: PropTypes.func.isRequired,\r\n  onGetImg: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery\r\n","import React, { Component } from \"react\";\r\n\r\nclass Button extends Component{\r\n    render() {\r\n        return (\r\n            <button\r\n                type='button'\r\n                className='Button'\r\n                onClick={this.props.onClick}\r\n            \r\n            >\r\n                Load more\r\n            </button>\r\n        )\r\n    }\r\n}\r\nexport default Button","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component{\r\n     \r\n    componentDidMount() {\r\n        console.log('componentDidMount');\r\n         window.addEventListener('click', this.onCloseByClick)\r\n         window.addEventListener('keydown', this.onCloseByKedown)\r\n    }\r\n    componentWillUnmount() {\r\n        console.log('componentWillUnmount');\r\n         window.removeEventListener ('keydown', this.onCloseByKedown)\r\n    }\r\n    onCloseByClick = (e) => {\r\n        if (e.target.nodeName === \"DIV\") {\r\n            this.props.onClose()\r\n        }\r\n    }\r\n    onCloseByKedown = (e) => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose()\r\n        }\r\n    }\r\n    render() {\r\n        const { onGetImg, onClose } = this.props\r\n        console.log({ onGetImg, onClose });\r\n        return createPortal(\r\n          \r\n            <div className=\"Overlay\" onClose={onClose}>\r\n                <div className=\"Modal\">\r\n                    <img\r\n                        src={onGetImg.img}\r\n                    alt={onGetImg.alt} \r\n                    />\r\n                </div>\r\n            </div>,\r\n            modalRoot,\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  modalImage: PropTypes.object.isRequired,\r\n};\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport './styles/common.css'\nimport { ToastContainer} from 'react-toastify';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Loader from \"react-loader-spinner\";\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\n\n\nclass App extends Component {\n  state = {\n    mainURL: 'https://pixabay.com/api/',\n    secondaryURL:'&image_type=photo&orientation=horizontal&per_page=12',\n    images: [],\n    myKey:'24253422-4477825d93e6eb518eebc16ed',\n    query: '',\n    page: 1,\n    status: 'idle',\n    error: null,\n    showModal: false,\n    modalImage: '',\n\n  }\n  componentDidMount() {\n    window.addEventListener('click', e => {\n      // console.log(this.toggleModal);\n      if (e.target.nodeName === \"IMG\") {\n        this.toggleModal()\n      }\n    })\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { mainURL, secondaryURL, query, page, myKey } = this.state;\n\n    window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: \"smooth\",\n        });\n    \n    if (prevState.query !== query) {\n      this.setState({ status: 'pending' })\n      \n      setTimeout(() => {\n        fetch(`${mainURL}?q=${query}&page=${page}&key=${myKey}${secondaryURL}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json()\n        }\n        return Promise.reject(new Error(`Can not find ${query}!`));\n      })\n        .then((response) => {\n          this.setState({ images: response.hits, page: page + 1, status: 'resolved' })\n        })     \n      }, 1000);\n      \n      \n    }\n    \n  }\n  searchQuery = query => {\n    this.setState({ query });\n    this.setState({page: 1})\n  }\n  loadMore = () => {\n    this.setState((prev) => ({ page: prev.page + 1 }))\n    \n    const { mainURL, secondaryURL, query, page, myKey } = this.state;\n     \n      fetch(`${mainURL}?q=${query}&page=${page}&key=${myKey}${secondaryURL}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json()\n        }\n        return Promise.reject(new Error(`Can not find ${query}!`));\n      })\n      .then((response) => {\n        this.setState((prevState) => ({ images: [...prevState.images, ...response.hits], status: 'resolved' }))\n        \n      })\n     \n        \n    }\n  \n  toggleModal = () => {\n    \n    this.setState(({ showModal }) => (\n      // console.log({ showModal })\n      { showModal: !showModal }\n    ))\n  }\n  setImgModal = (img, alt) => {\n    //  console.log(img, alt);\n    this.setState({ modalImage: { img: img, alt: alt } });\n    // console.log({ modalImage: { img: img, alt: alt } });\n  };\n \n  render() {\n    console.log(this.state.modalImage);\n    const { status, images, showModal, modalImage } = this.state\n    return (\n      <>\n      <Searchbar onSubmit={this.searchQuery} />\n      <ToastContainer autoClose={3000} />\n        {status === 'resolved' &&\n          <ImageGallery\n          images={images}\n          showModal={this.toggleModal}\n          onGetImg={this.setImgModal}\n        />\n        }\n        {status === 'pending' &&\n          <Loader\n            className='Loader'\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n          timeout={3000}\n         style={({margin: '0 50%'})}/>\n        \n        }\n        {images.length !== 0 && <Button onClick={this.loadMore}/>\n        }\n        {showModal && <Modal\n          onClose={this.toggleModal}\n          onGetImg={modalImage}\n        />}\n    </>\n   )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}